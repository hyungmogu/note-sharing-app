{"version":3,"sources":["components/NoteImageObject.js","components/NoteViewHeader.js","components/PrimaryHeader.js","components/PrimaryHeaderMobile.js","components/PrivateRoute.js","components/SecondaryHeader.js","components/NoteView.js","screens/NoteViewScreen.js","components/NoteFolderObject.js","screens/DirectoryScreen.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/SignUpScreen.js","App.js","serviceWorker.js","index.js"],"names":["NoteImageObject","to","this","props","note","folder","slug","className","src","url","name","Component","withRouter","NoteViewHeader","state","items","pk","location","pathname","match","matchPath","history","path","exact","strict","params","page","console","log","class","map","key","PrimaryHeader","icon","faPlus","type","placeholder","faCheck","faTrashAlt","PrimaryHeaderMobile","faBars","PrivateRoute","component","render","renderProps","SecondaryHeader","faCloudDownloadAlt","faCloudUploadAlt","faUserPlus","faUserCircle","NoteView","NoteViewScreen","NoteFolderObject","faFolderOpen","DirectoryScreen","folders","isNote","HomeScreen","LoginScreen","handleSubmit","push","onSubmit","SignUpScreen","App","basename","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.36115955.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass NoteImageObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.note}/${this.props.folder}/${this.props.slug}`} className=\"noteImage\">\n                <img src={this.props.url}/>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteImageObject);","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router'\nimport { withRouter } from 'react-router-dom';\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass NoteViewHeader extends Component {\n\n    state = {\n        items: [\n            {\n                pk: 1,\n                name: 'Page 1',\n                slug: 'page1',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 2,\n                name: 'Page 2',\n                slug: 'page2',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 3,\n                name: 'Page 3',\n                slug: 'page3',\n                url: 'https://via.placeholder.com/200'\n            }\n        ]\n    }\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n        });\n\n\n        if (!(match) ||\n            !(match.params) ||\n            !(match.params.note) ||\n            !(match.params.folder) ||\n            !(match.params.page)) {\n                return null;\n        }\n\n        let note = match.params.note;\n        let folder = match.params.folder;\n\n        console.log(note);\n        console.log(folder);\n\n        return (\n        <header class=\"noteViewHeader\">\n            {this.state.items.map( props =>\n                <NoteImageObject key={props.pk} note={note} folder={folder} {...props}/>\n            )}\n        </header>\n        );\n    }\n};\n\nexport default withRouter(NoteViewHeader);","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router'\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nclass PrimaryHeader extends Component {\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n          });\n\n\n        if ((match) &&\n            (match.params) &&\n            (match.params.note) &&\n            (match.params.folder) &&\n            (match.params.page)) {\n                return null;\n        }\n\n        return (\n        <header className=\"primaryHeader\">\n            <nav>\n                <section>\n                    <button className=\"button button--type-add\">\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </section>\n                <section>\n                    <ul>\n                        <li><NavLink to=\"/notes/physics\">Physics</NavLink></li>\n                        <li><NavLink to=\"/notes/social_studies\">Social Studies</NavLink></li>\n                        <li><NavLink to=\"/notes/biology\">Biology</NavLink></li>\n                        <li><NavLink to=\"/notes/english\">English</NavLink></li>\n                        <li>\n                            <form className=\"form--type-header\">\n                                <input type=\"text\" placeholder=\"Name\"/>\n                                <button className=\"button button--type-check\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faCheck}/>\n                                </button>\n                                <button className=\"button button--type-cancel\">\n                                    <FontAwesomeIcon icon={faTrashAlt}/>\n                                </button>\n                            </form>\n                        </li>\n                    </ul>\n                </section>\n            </nav>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeader);","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\n\n\nclass PrimaryHeaderMobile extends Component {\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        return (\n        <header className=\"header--navigation-mobile\">\n            <button className=\"button button--type-menu\">\n                <FontAwesomeIcon icon={faBars}/>\n            </button>\n            <section>\n                <strong>Note Sharing Application</strong>\n            </section>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeaderMobile);","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n\n//   const isLoggedIn = AuthService.isLoggedIn()\nconst isLoggedIn = true;\n\n  return (\n    <Route\n      {...props}\n      render={renderProps =>\n        isLoggedIn ? (\n          <Component {...renderProps} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserPlus, faUserCircle, faCloudUploadAlt, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass SecondaryHeader extends Component {\n\n    render() {\n        return (\n            <header className=\"secondaryHeader\">\n                <h3>\n                    Physics\n                </h3>\n                <ul>\n                    <li>\n                        <button className=\"button button--type-uploadFile\">\n                            <FontAwesomeIcon icon={faCloudDownloadAlt}/>\n                            Download File\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-uploadFile\">\n                            <FontAwesomeIcon icon={faCloudUploadAlt}/>\n                            Upload File\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-addUser\">\n                            <FontAwesomeIcon icon={faUserPlus}/>\n                            Add User\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-user\">\n                            <FontAwesomeIcon icon={faUserCircle}/>\n                        </button>\n                    </li>\n                </ul>\n            </header>\n        );\n    }\n};\n\nexport default SecondaryHeader;","import React, { Component } from 'react';\n\nclass NoteView extends Component {\n\n    render() {\n        return (\n            <section\n            className=\"noteView\"\n            >\n                <img src=\"https://via.placeholder.com/750x1000\"/>\n                <section class=\"navigation\">\n                    <button>&lt; Back</button>\n                    <span>Page 1</span>\n                    <button>Next &gt;</button>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default NoteView;\n","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SecondaryHeader from '../components/SecondaryHeader';\nimport NoteView from '../components/NoteView';\n\nclass NoteViewScreen extends Component {\n\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-view\"\n            >\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section>\n                        <NoteView/>\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default withRouter(NoteViewScreen);\n","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\n\nclass NoteFolderObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.note}/${this.props.slug}`} className=\"noteFolder\">\n                <section class=\"icon\">\n                    <FontAwesomeIcon icon={faFolderOpen}/>\n                </section>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteFolderObject);","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport NoteFolderObject from '../components/NoteFolderObject';\nimport NoteImageObject from '../components/NoteImageObject';\nimport SecondaryHeader from '../components/SecondaryHeader';\n\nclass DirectoryScreen extends Component {\n\n    state = {\n        folders: [\n            {\n                pk: 1,\n                slug: 'lecture1',\n                name: 'Lecture 1'\n            },\n            {\n                pk: 2,\n                slug: 'lecture2',\n                name: 'Lecture 2'\n            },\n            {\n                pk: 3,\n                slug: 'lecture3',\n                name: 'Lecture 3'\n            }\n        ],\n        items: [\n            {\n                pk: 1,\n                name: 'Page 1',\n                slug: 'page1',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 2,\n                name: 'Page 2',\n                slug: 'page2',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 3,\n                name: 'Page 3',\n                slug: 'page3',\n                url: 'https://via.placeholder.com/200'\n            }\n        ]\n    }\n\n    render() {\n        let note = this.props.match.params.note;\n        let folder = this.props.match.params.folder;\n\n        let isNote = folder ? false : true;\n\n        return (\n            <section\n            className=\"section--screen section--screen-directory\"\n            >\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section class=\"items \">\n                        {isNote ? this.state.folders.map((props) => {\n                            return <NoteFolderObject key={props.pk} note={note} {...props}/>\n                        }) :\n\n                        this.state.items.map((props) => {\n                            return <NoteImageObject key={props.pk} note={note} folder={folder} {...props}/>\n                        })}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default withRouter(DirectoryScreen);\n","import React, { Component } from 'react';\n\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass HomeScreen extends Component {\n\n    state = {\n        items: [\n            {\n                pk: 1,\n                name: 'Page 1',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 2,\n                name: 'Page 2',\n                url: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 3,\n                name: 'Page 3',\n                url: 'https://via.placeholder.com/200'\n            }\n        ]\n    }\n\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-home\"\n            >\n                <main className=\"main\">\n                    <h3>Recently Added Notes</h3>\n                    <section className=\"items\">\n                        {this.state.items.map(({pk, ...props}) =>\n                            <NoteImageObject key={pk} {...props}/>\n                        )}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default HomeScreen;\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass LoginScreen extends Component {\n    handleSubmit = () => {\n        this.props.history.push('/home');\n    }\n\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-loginSignup\"\n            >\n                <form\n                    className=\"form--type-loginSignup\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <button className=\"button button--type-primary\" type=\"submit\">Login</button>\n                    <NavLink to=\"/signup\" className=\"button button--type-secondary\">Sign up</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass SignUpScreen extends Component {\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-loginSignup\"\n            >\n                <form className=\"form--type-loginSignup\">\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"text\" placeholder=\"Name\"/>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <input type=\"password\" placeholder=\"Password Confirm\"/>\n                    <button className=\"button button--type-primary\" type=\"submit\">Login</button>\n                    <NavLink exact to=\"/login\" className=\"button button--type-secondary\">Back</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default SignUpScreen;\n","import React from 'react';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport NoteViewHeader from './components/NoteViewHeader';\nimport PrimaryHeader from './components/PrimaryHeader';\nimport PrimaryHeaderMobile from './components/PrimaryHeaderMobile';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport NoteViewScreen from './screens/NoteViewScreen';\nimport DirectoryScreen from './screens/DirectoryScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport SignUpScreen from './screens/SignUpScreen';\nimport './App.scss';\n\nfunction App() {\n    return (\n        <BrowserRouter basename={\"note-sharing-app\"}>\n            <div className=\"App\">\n                <NoteViewHeader/>\n                <PrimaryHeaderMobile/>\n                <PrimaryHeader/>\n                <Switch>\n                    <Route path=\"/login\" component={LoginScreen}/>\n                    <Route path=\"/signup\" component={SignUpScreen}/>\n                    <PrivateRoute path=\"/home\" component={HomeScreen}/>\n                    <PrivateRoute path=\"/notes/:note/:folder/:page\" component={NoteViewScreen}/>\n                    <PrivateRoute path=\"/notes/:note/:folder\" component={DirectoryScreen}/>\n                    <PrivateRoute path=\"/notes/:note\" component={DirectoryScreen}/>\n                </Switch>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
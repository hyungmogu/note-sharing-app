{"version":3,"sources":["components/Context/index.js","components/NoteImageObject.js","components/NoteViewHeader.js","components/PrimaryHeader.js","components/PrimaryHeaderMobile.js","components/PrivateRoute.js","components/SecondaryHeader.js","components/NoteView.js","screens/NoteViewScreen.js","components/NoteFolderObject.js","screens/DirectoryScreen.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/SignUpScreen.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","Provider","AppConsumer","Consumer","NoteImageObject","to","this","props","path","className","src","image","name","Component","withRouter","NoteViewHeader","location","pages","appContext","items","pathname","match","matchPath","history","exact","strict","params","note","folder","page","noteSlug","folderSlug","class","map","key","pk","NoteViewHeaderWithRoute","forwardRef","ref","PrimaryHeader","icon","faPlus","type","placeholder","faCheck","faTrashAlt","PrimaryHeaderMobile","navRef","createRef","handleMobileMenuClick","current","classList","contains","remove","add","handleCloseMenu","onClick","faBars","PrivateRoute","component","render","renderProps","SecondaryHeader","faCloudDownloadAlt","faCloudUploadAlt","faUserPlus","faUserCircle","NoteView","handlePrev","currentIndex","findIndex","item","actions","updateView","handleNext","NoteViewScreen","NoteFolderObject","faFolderOpen","DirectoryScreen","isNote","folders","DirectoryScreenWithRoute","HomeScreen","recentItems","LoginScreen","handleSubmit","push","onSubmit","SignUpScreen","App","state","user","email","authToken","notes","slug","imported","info","value","basename","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.668c8838.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass NoteImageObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.path}`} className=\"noteImage\">\n                <img src={this.props.image}/>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteImageObject);","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router';\nimport { AppConsumer } from '../components/Context';\nimport { withRouter } from 'react-router-dom';\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass NoteViewHeader extends Component {\n\n    render() {\n        const {location} = this.props;\n        let pages = this.props.appContext.pages.items;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n        });\n\n\n        if (!(match) ||\n            !(match.params) ||\n            !(match.params.note) ||\n            !(match.params.folder) ||\n            !(match.params.page)) {\n                return null;\n        }\n\n        let noteSlug = match.params.note;\n        let folderSlug = match.params.folder;\n\n        return (\n        <header class=\"noteViewHeader\">\n            {pages.map( props =>\n                <NoteImageObject key={props.pk} note={noteSlug} folder={folderSlug} {...props}/>\n            )}\n        </header>\n        );\n    }\n};\n\nlet NoteViewHeaderWithRoute = withRouter(NoteViewHeader);\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <NoteViewHeaderWithRoute\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router'\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nclass PrimaryHeader extends Component {\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n          });\n\n\n        if ((match) &&\n            (match.params) &&\n            (match.params.note) &&\n            (match.params.folder) &&\n            (match.params.page)) {\n                return null;\n        }\n\n        return (\n        <header className=\"primaryHeader\">\n            <nav>\n                <section>\n                    <button className=\"button button--type-add\">\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </section>\n                <section>\n                    <ul>\n                        <li><NavLink to=\"/notes/physics\">Physics</NavLink></li>\n                        <li><NavLink to=\"/notes/social_studies\">Social Studies</NavLink></li>\n                        <li><NavLink to=\"/notes/biology\">Biology</NavLink></li>\n                        <li><NavLink to=\"/notes/english\">English</NavLink></li>\n                        <li>\n                            <form className=\"form--header\">\n                                <input type=\"text\" placeholder=\"Name\"/>\n                                <button className=\"button button--check\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faCheck}/>\n                                </button>\n                                <button className=\"button button--cancel\">\n                                    <FontAwesomeIcon icon={faTrashAlt}/>\n                                </button>\n                            </form>\n                        </li>\n                    </ul>\n                </section>\n            </nav>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeader);","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faCheck, faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nclass PrimaryHeaderMobile extends Component {\n\n    navRef = React.createRef();\n\n    handleMobileMenuClick = () => {\n        if (this.navRef.current.classList.contains('open')) {\n            this.navRef.current.classList.remove('open');\n            return;\n        }\n\n        this.navRef.current.classList.add('open');\n    }\n\n    handleCloseMenu = () => {\n        this.navRef.current.classList.remove('open');\n    }\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        return (\n        <header className=\"primaryHeaderMobile\">\n            <section className=\"primaryHeaderMobile--header\">\n                <button className=\"button button--menu\" onClick={this.handleMobileMenuClick}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </button>\n                <section className=\"primaryHeaderMobile--title\">\n                    <NavLink onClick={this.handleCloseMenu}  exact to=\"/home\"><strong>Note Sharing Application</strong></NavLink>\n                </section>\n            </section>\n            <nav ref={this.navRef} className=\"primaryHeaderMobile--navigation\">\n                <section>\n                    <button className=\"button button--type-add\">\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </section>\n                <ul>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/physics\">Physics</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/social_studies\">Social Studies</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/biology\">Biology</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/english\">English</NavLink></li>\n                    <li>\n                        <form className=\"form--header\">\n                            <input type=\"text\" placeholder=\"Name\"/>\n                            <button className=\"button button--check\" type=\"submit\">\n                                <FontAwesomeIcon icon={faCheck}/>\n                            </button>\n                            <button className=\"button button--cancel\">\n                                <FontAwesomeIcon icon={faTrashAlt}/>\n                            </button>\n                        </form>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeaderMobile);","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n\n//   const isLoggedIn = AuthService.isLoggedIn()\nconst isLoggedIn = true;\n\n  return (\n    <Route\n      {...props}\n      render={renderProps =>\n        isLoggedIn ? (\n          <Component {...renderProps} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserPlus, faUserCircle, faCloudUploadAlt, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons'\n\nclass SecondaryHeader extends Component {\n\n    render() {\n        return (\n            <header className=\"secondaryHeader\">\n                <h3>\n                    Physics\n                </h3>\n                <ul>\n                    <li>\n                        <button className=\"button button--type-uploadFile\">\n                            <FontAwesomeIcon icon={faCloudDownloadAlt}/>\n                            Download File\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-uploadFile\">\n                            <FontAwesomeIcon icon={faCloudUploadAlt}/>\n                            Upload File\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-addUser\">\n                            <FontAwesomeIcon icon={faUserPlus}/>\n                            Add User\n                        </button>\n                    </li>\n                    <li>\n                        <button className=\"button button--type-user\">\n                            <FontAwesomeIcon icon={faUserCircle}/>\n                        </button>\n                    </li>\n                </ul>\n            </header>\n        );\n    }\n};\n\nexport default SecondaryHeader;","import React, { Component } from 'react';\n\nimport { AppConsumer } from '../components/Context';\n\nclass NoteView extends Component {\n\n    handlePrev = () => {\n        let currentIndex = this.props.appContext.pages.items.findIndex(item => {\n            return item.path === this.props.path\n        });\n\n        this.props.appContext.actions.updateView(currentIndex + 1);\n    }\n\n    handleNext = () => {\n       let currentIndex = this.props.appContext.pages.items.findIndex(item => {\n            return item.path === this.props.path\n        });\n\n        this.props.appContext.actions.updateView(currentIndex - 1);\n    }\n\n    render() {\n        return (\n            <section\n            className=\"noteView\"\n            >\n                <img src=\"https://via.placeholder.com/750x1000\"/>\n                <section class=\"navigation\">\n                    <button onClick={this.handlePrev}>&lt; Back</button>\n                    <span>Page 1</span>\n                    <button onClick={this.handleNext}>Next &gt;</button>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <NoteView\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n\n","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SecondaryHeader from '../components/SecondaryHeader';\nimport NoteView from '../components/NoteView';\n\nclass NoteViewScreen extends Component {\n\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-view\"\n            >\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section>\n                        <NoteView {...this.props}/>\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default withRouter(NoteViewScreen);\n","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\n\nclass NoteFolderObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.path}`} className=\"noteFolder\">\n                <section class=\"icon\">\n                    <FontAwesomeIcon icon={faFolderOpen}/>\n                </section>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteFolderObject);","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { AppConsumer } from '../components/Context';\nimport NoteFolderObject from '../components/NoteFolderObject';\nimport NoteImageObject from '../components/NoteImageObject';\nimport SecondaryHeader from '../components/SecondaryHeader';\n\nclass DirectoryScreen extends Component {\n\n    render() {\n        let noteSlug = this.props.match.params.note;\n        let folderSlug = this.props.match.params.folder;\n\n        let isNote = folderSlug ? false : true;\n\n        let folders = this.props.appContext.folders.items;\n        let pages = this.props.appContext.pages.items;\n\n        return (\n            <section\n            className=\"section--screen section--screen-directory\"\n            >\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section class=\"items \">\n                        {isNote ? folders.map((props) => {\n                            return <NoteFolderObject key={props.pk} note={noteSlug} {...props}/>\n                        }) :\n\n                        pages.map((props) => {\n                            return <NoteImageObject key={props.pk} {...props}/>\n                        })}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nlet DirectoryScreenWithRoute = withRouter(DirectoryScreen);\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <DirectoryScreenWithRoute\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { AppConsumer } from '../components/Context';\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass HomeScreen extends Component {\n\n    render() {\n        let recentItems = this.props.appContext.recentItems;\n\n        return (\n            <section\n            className=\"section--screen section--screen-home\"\n            >\n                <main className=\"main\">\n                    <h3>Recently Added Notes</h3>\n                    <section className=\"items\">\n                        {recentItems.map(({pk, ...props}) =>\n                            <NoteImageObject key={pk} {...props}/>\n                        )}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <HomeScreen\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass LoginScreen extends Component {\n    handleSubmit = () => {\n        this.props.history.push('/home');\n    }\n\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-loginSignup\"\n            >\n                <form\n                    className=\"form--type-loginSignup\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <button className=\"button button--type-primary\" type=\"submit\">Login</button>\n                    <NavLink to=\"/signup\" className=\"button button--type-secondary\">Sign up</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass SignUpScreen extends Component {\n    render() {\n        return (\n            <section\n            className=\"section--screen section--screen-loginSignup\"\n            >\n                <form className=\"form--type-loginSignup\">\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"text\" placeholder=\"Name\"/>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <input type=\"password\" placeholder=\"Password Confirm\"/>\n                    <button className=\"button button--type-primary\" type=\"submit\">Login</button>\n                    <NavLink exact to=\"/login\" className=\"button button--type-secondary\">Back</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default SignUpScreen;\n","import React, {Component} from 'react';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport { AppProvider } from './components/Context';\n\nimport NoteViewHeader from './components/NoteViewHeader';\nimport PrimaryHeader from './components/PrimaryHeader';\nimport PrimaryHeaderMobile from './components/PrimaryHeaderMobile';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport NoteViewScreen from './screens/NoteViewScreen';\nimport DirectoryScreen from './screens/DirectoryScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport SignUpScreen from './screens/SignUpScreen';\nimport './App.scss';\n\nclass App extends Component {\n\n    state = {\n        user: {\n            name: null,\n            email: null,\n            authToken: null\n        },\n        recentItems: [\n            {\n                pk: 1,\n                name: 'Page 1',\n                path: 'physics/lecture1/page1',\n                image: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 2,\n                name: 'Page 2',\n                path: 'physics/lecture1/page2',\n                image: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 3,\n                name: 'Page 3',\n                path: 'physics/lecture1/page3',\n                image: 'https://via.placeholder.com/200'\n            }\n        ],\n        notes: {\n            slug: null,\n            imported: false,\n            items: []\n        },\n        folders: {\n            info: {\n                slug: null,\n                name: null,\n                path: null\n            },\n            items: [\n                {\n                    pk: 1,\n                    path: 'physics/lecture1',\n                    name: 'Lecture 1'\n                },\n                {\n                    pk: 2,\n                    path: 'physics/lecture2',\n                    name: 'Lecture 2'\n                },\n                {\n                    pk: 3,\n                    path: 'physics/lecture3',\n                    name: 'Lecture 3'\n                }\n            ]\n        },\n        pages: {\n            info: {\n                slug: null,\n                name: null,\n                path: null\n            },\n            currentIndex: null,\n            items: [\n                {\n                    pk: 1,\n                    name: 'Page 1',\n                    path: 'physics/lecture1/page1',\n                    image: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 2,\n                    name: 'Page 2',\n                    path: 'physics/lecture1/page2',\n                    image: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 3,\n                    name: 'Page 3',\n                    path: 'physics/lecture1/page3',\n                    image: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 4,\n                    name: 'Page 4',\n                    path: 'physics/lecture1/page4',\n                    image: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 5,\n                    name: 'Page 5',\n                    path: 'physics/lecture1/page5',\n                    image: 'https://via.placeholder.com/200'\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <AppProvider value={{...this.state}}>\n                <BrowserRouter basename={\"note-sharing-app\"}>\n                    <div className=\"App\">\n                        <NoteViewHeader/>\n                        <PrimaryHeaderMobile/>\n                        <PrimaryHeader/>\n                        <Switch>\n                            <Route path=\"/login\" component={LoginScreen}/>\n                            <Route path=\"/signup\" component={SignUpScreen}/>\n                            <PrivateRoute path=\"/home\" component={HomeScreen}/>\n                            <PrivateRoute path=\"/notes/:note/:folder/:page\" component={NoteViewScreen}/>\n                            <PrivateRoute path=\"/notes/:note/:folder\" component={DirectoryScreen}/>\n                            <PrivateRoute path=\"/notes/:note\" component={DirectoryScreen}/>\n                        </Switch>\n                    </div>\n                </BrowserRouter>\n            </AppProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Context/index.js","components/NoteImageObject.js","components/NoteViewHeader.js","components/PrimaryHeader.js","components/PrimaryHeaderMobile.js","components/PrivateRoute.js","modals/Modal.js","modals/UploadFileModal.js","modals/AddUserModal.js","components/SecondaryHeader/UserMenu.js","components/SecondaryHeader/index.js","components/NoteView.js","screens/NoteViewScreen.js","components/NoteFolderObject.js","screens/DirectoryScreen.js","screens/HomeScreen.js","screens/LoginScreen.js","screens/SignUpScreen.js","screens/NotFoundScreen.js","screens/LogOutScreen.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","AppProvider","Provider","AppConsumer","Consumer","NoteImageObject","to","this","props","path","className","src","imageURL","name","Component","withRouter","NoteViewHeader","location","pages","appContext","items","pathname","match","matchPath","history","exact","strict","params","note","folder","page","noteSlug","folderSlug","class","map","key","pk","NoteViewHeaderWithRoute","forwardRef","ref","PrimaryHeader","state","addNew","handleAddNewTopic","setState","prev","onClick","icon","faPlus","type","placeholder","faCheck","faTrashAlt","PrimaryHeaderMobile","navRef","createRef","handleToggleMobileMenu","current","classList","contains","remove","add","handleCloseMenu","faBars","PrivateRoute","component","render","renderProps","Modal","modalRef","handleOpenModal","e","handleCloseModal","stopPropagation","children","UploadFileModal","dragDropAreaRef","handleOnDragOver","preventDefault","handleOnDragLeave","handleDrop","onDragOver","onDragLeave","onDrop","faFileUpload","AddUserModal","users","email","item","index","faTimes","UserMenu","Fragment","faUserCircle","SecondaryHeader","uploadFileModalRef","addUserModalRef","handleOpenUploadFileModal","handleOpenAddUserModal","isNotFoundScreen","faCloudDownloadAlt","faCloudUploadAlt","faUserPlus","SecondaryHeaderWithRoute","NoteView","currentIndex","handleMoveToItem","currPath","findIndex","prevState","handlePrev","push","handleNext","image","Error","length","disabled","faLessThan","faGreaterThan","NoteViewScreen","NoteFolderObject","faFolderOpen","DirectoryScreen","isNote","folders","DirectoryScreenWithRoute","HomeScreen","recentItems","LoginScreen","handleSubmit","onSubmit","SignUpScreen","NotFoundScreen","faBolt","LogOutScreen","App","user","authToken","notes","slug","imported","info","value","basename","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c057b3d.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport const AppProvider = AppContext.Provider;\nexport const AppConsumer = AppContext.Consumer;","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\n\nclass NoteImageObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.path}`} className=\"noteImage\">\n                <img src={this.props.imageURL}/>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteImageObject);","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router';\nimport { AppConsumer } from '../components/Context';\nimport { withRouter } from 'react-router-dom';\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass NoteViewHeader extends Component {\n\n    render() {\n        const {location} = this.props;\n        let pages = this.props.appContext.pages.items;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n        });\n\n\n        if (!(match) ||\n            !(match.params) ||\n            !(match.params.note) ||\n            !(match.params.folder) ||\n            !(match.params.page)) {\n                return null;\n        }\n\n        let noteSlug = match.params.note;\n        let folderSlug = match.params.folder;\n\n        return (\n        <header class=\"noteViewHeader\">\n            {pages.map( props =>\n                <NoteImageObject key={props.pk} note={noteSlug} folder={folderSlug} {...props}/>\n            )}\n        </header>\n        );\n    }\n};\n\nlet NoteViewHeaderWithRoute = withRouter(NoteViewHeader);\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <NoteViewHeaderWithRoute\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router'\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\n\nclass PrimaryHeader extends Component {\n\n    state = {\n        addNew: false\n    };\n\n    handleAddNewTopic = () => {\n        this.setState( prev => {\n            return {\n                addNew: !prev.addNew\n            }\n        });\n    }\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/logout/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n          });\n\n\n        if ((match) &&\n            (match.params) &&\n            (match.params.note) &&\n            (match.params.folder) &&\n            (match.params.page)) {\n                return null;\n        }\n\n        return (\n        <header className=\"primaryHeader\">\n            <nav>\n                <section>\n                    <button onClick={this.handleAddNewTopic} className=\"button button--add\">\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </section>\n                <section>\n                    <ul>\n                        <li><NavLink to=\"/notes/physics\">Physics</NavLink></li>\n                        <li><NavLink to=\"/notes/social_studies\">Social Studies</NavLink></li>\n                        <li><NavLink to=\"/notes/biology\">Biology</NavLink></li>\n                        <li><NavLink to=\"/notes/english\">English</NavLink></li>\n                        {\n                            this.state.addNew ?\n                            <li>\n                                <form className=\"form--header\">\n                                    <input type=\"text\" placeholder=\"Name\"/>\n                                    <button className=\"button button--check\" type=\"submit\">\n                                        <FontAwesomeIcon icon={faCheck}/>\n                                    </button>\n                                    <button className=\"button button--cancel\">\n                                        <FontAwesomeIcon icon={faTrashAlt}/>\n                                    </button>\n                                </form>\n                            </li>\n\n                            : ''\n                        }\n                    </ul>\n                </section>\n            </nav>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeader);","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars, faCheck, faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons'\n\nclass PrimaryHeaderMobile extends Component {\n\n    navRef = React.createRef();\n\n    state = {\n        addNew: false\n    };\n\n    handleAddNewTopic = () => {\n        this.setState( prev => {\n            return {\n                addNew: !prev.addNew\n            }\n        });\n    }\n\n    handleToggleMobileMenu = () => {\n        if (this.navRef.current.classList.contains('open')) {\n            this.navRef.current.classList.remove('open');\n            return;\n        }\n\n        this.navRef.current.classList.add('open');\n    }\n\n    handleCloseMenu = () => {\n        this.navRef.current.classList.remove('open');\n    }\n\n    render() {\n        const {location} = this.props;\n\n        if (location.pathname.match(/\\/login/) ||\n            location.pathname.match(/\\/logout/) ||\n            location.pathname.match(/\\/signup/)\n        ) {\n            return null;\n        }\n\n        return (\n        <header className=\"primaryHeaderMobile\">\n            <section className=\"primaryHeaderMobile--header\">\n                <button className=\"button button--menu\" onClick={this.handleToggleMobileMenu}>\n                    <FontAwesomeIcon icon={faBars}/>\n                </button>\n                <section className=\"primaryHeaderMobile--title\">\n                    <NavLink onClick={this.handleCloseMenu}  exact to=\"/home\"><strong>Note Sharing Application</strong></NavLink>\n                </section>\n            </section>\n            <nav ref={this.navRef} className=\"primaryHeaderMobile--navigation\">\n                <section>\n                    <button onClick={this.handleAddNewTopic} className=\"button button--add\">\n                        <FontAwesomeIcon icon={faPlus}/>\n                    </button>\n                </section>\n                <ul>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/physics\">Physics</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/social_studies\">Social Studies</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/biology\">Biology</NavLink></li>\n                    <li><NavLink onClick={this.handleCloseMenu} to=\"/notes/english\">English</NavLink></li>\n                    {\n                        this.state.addNew ?\n                        <li>\n                            <form className=\"form--header\">\n                                <input type=\"text\" placeholder=\"Name\"/>\n                                <button className=\"button button--check\" type=\"submit\">\n                                    <FontAwesomeIcon icon={faCheck}/>\n                                </button>\n                                <button className=\"button button--cancel\">\n                                    <FontAwesomeIcon icon={faTrashAlt}/>\n                                </button>\n                            </form>\n                        </li>\n\n                        : ''\n                    }\n                </ul>\n            </nav>\n        </header>\n        );\n    }\n};\n\nexport default withRouter(PrimaryHeaderMobile);","import React from 'react';\nimport AuthService from '../services/AuthService';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...props }) => {\n\n//   const isLoggedIn = AuthService.isLoggedIn()\nconst isLoggedIn = true;\n\n  return (\n    <Route\n      {...props}\n      render={renderProps =>\n        isLoggedIn ? (\n          <Component {...renderProps} />\n        ) : (\n          <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        )\n      }\n    />\n  )\n}\n\nexport default PrivateRoute","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { AppConsumer } from '../components/Context';\n\nclass Modal extends Component {\n    modalRef = React.createRef();\n\n    handleOpenModal = (e) => {\n        if (this.modalRef.current.classList.contains('closed')) {\n            this.modalRef.current.classList.remove('closed');\n        }\n    }\n\n    handleCloseModal = (e) => {\n        if (!this.modalRef.current.classList.contains('closed')) {\n            this.modalRef.current.classList.add('closed');\n        }\n    }\n\n    render() {\n        return (\n            <section\n                ref={this.modalRef}\n                className=\"modal closed\"\n                onClick={e => this.handleCloseModal(e)}\n            >\n                <section className=\"modal--wrapper\" onClick={e => e.stopPropagation()}>\n                    {this.props.children}\n                </section>\n            </section>\n        );\n    }\n};\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <Modal\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons';\n\nimport { AppConsumer } from '../components/Context';\nimport Modal from './Modal';\n\nclass UploadFileModal extends Component {\n    modalRef = React.createRef();\n    dragDropAreaRef = React.createRef();\n\n    handleOpenModal = (e) => {\n        this.modalRef.current.handleOpenModal(e);\n    }\n\n    handleCloseModal = (e) => {\n        this.modalRef.current.handleCloseModal(e);\n    }\n\n    handleOnDragOver = (e) => {\n        e.preventDefault();\n        if (this.dragDropAreaRef.current.classList.contains('dragged')) {\n            return null;\n        }\n\n        this.dragDropAreaRef.current.classList.add('dragged');\n    }\n\n    handleOnDragLeave = (e) => {\n        e.preventDefault();\n        if (!this.dragDropAreaRef.current.classList.contains('dragged')) {\n            return null;\n        }\n\n        this.dragDropAreaRef.current.classList.remove('dragged');\n    }\n\n    handleDrop = (e) => {\n        this.dragDropAreaRef.current.classList.remove('dragged');\n        this.modalRef.current.handleCloseModal(e);\n    }\n\n    render() {\n        return (\n            <Modal ref={this.modalRef}>\n                <section className=\"uploadFileModal\">\n                    <section\n                        ref={this.dragDropAreaRef}\n                        className=\"uploadFileModal--dragDropArea\"\n                        onDragOver={this.handleOnDragOver}\n                        onDragLeave={this.handleOnDragLeave}\n                        onDrop={this.handleDrop}\n                    >\n                        <FontAwesomeIcon className=\"screenIcon\" icon={faFileUpload}/>\n                        <h4>Drag and drop image files here</h4>\n                    </section>\n                    <button onClick={e => this.handleCloseModal(e)} className=\"button button--primary\">Close</button>\n                </section>\n            </Modal>\n        );\n    }\n};\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <UploadFileModal\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { AppConsumer } from '../components/Context';\nimport Modal from './Modal';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\n\n\nclass AddUserModal extends Component {\n    modalRef = React.createRef();\n\n    state = {\n        users: [\n            {\n                pk: 1,\n                name: 'John Doe',\n                email: 'johnDoe@gmail.com'\n            },\n            {\n                pk: 2,\n                name: 'James Li',\n                email: 'johnDoe@gmail.com'\n            }\n        ]\n    }\n\n    handleOpenModal = (e) => {\n        this.modalRef.current.handleOpenModal(e);\n    }\n\n    handleCloseModal = (e) => {\n        this.modalRef.current.handleCloseModal(e);\n    }\n\n    render() {\n        return (\n            <Modal ref={this.modalRef}>\n                <section className=\"addUserModal\">\n                    <h3 className=\"addUserModal--title\">Add User</h3>\n                    <section className=\"addUserModal--wrapper-userList\">\n                        { this.state.users.map((item, index) =>\n                            <section\n                                className=\"addUserModal--item\"\n                                key={item.pk}\n                            >\n                                <span className=\"addUserModal--name\"><strong>{index+1}.</strong> {item.name}</span>\n                                <FontAwesomeIcon icon={faTimes}/>\n                            </section>\n                        )}\n                    </section>\n                    <section className=\"addUserModal--wrapper-input\">\n                        <input className=\"addUserModal--input\" type=\"email\" placeholder=\"Email\"/>\n                        <button className=\"button button--primary\">Add</button>\n                    </section>\n                    <button onClick={e => this.handleCloseModal(e)} className=\"button button--primary\">Close</button>\n                </section>\n            </Modal>\n        );\n    }\n};\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <AddUserModal\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons'\n\nclass UserMenu extends Component {\n\n    render() {\n        return (\n            <React.Fragment>\n                <section className=\"userMenu\">\n                    <button className=\"button button--user\">\n                        <FontAwesomeIcon icon={faUserCircle}/>\n                    </button>\n                    <nav className=\"userMenu--navigation\">\n                        <ul>\n                            <li className=\"userMenu--item\">\n                                <NavLink\n                                    to=\"/logout\"\n                                    className=\"userMenu--link\"\n                                >\n                                    Logout\n                                </NavLink>\n                            </li>\n                        </ul>\n                    </nav>\n                </section>\n            </React.Fragment>\n        );\n    }\n};\n\nexport default UserMenu;","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserPlus, faCloudUploadAlt, faCloudDownloadAlt } from '@fortawesome/free-solid-svg-icons'\nimport { withRouter } from 'react-router-dom';\n\nimport { AppConsumer } from '../Context';\nimport UploadFileModal from '../../modals/UploadFileModal';\nimport AddUserModal from '../../modals/AddUserModal';\nimport UserMenu from './UserMenu';\n\nclass SecondaryHeader extends Component {\n\n    uploadFileModalRef = React.createRef();\n    addUserModalRef = React.createRef();\n\n    handleOpenUploadFileModal = (e) => {\n        this.uploadFileModalRef.current.handleOpenModal(e);\n    }\n\n    handleOpenAddUserModal = (e) => {\n        this.addUserModalRef.current.handleOpenModal(e);\n    }\n\n    render() {\n\n        if (this.props.isNotFoundScreen) {\n            return (\n                <header className=\"secondaryHeader\">\n                    <ul>\n                        <li>\n                            <UserMenu/>\n                        </li>\n                    </ul>\n                </header>\n            );\n        }\n\n        return (\n            <header className=\"secondaryHeader\">\n                <h3>\n                    Physics\n                </h3>\n                <ul>\n                    <li>\n                        <button className=\"button button--uploadFile\">\n                            <FontAwesomeIcon icon={faCloudDownloadAlt}/>\n                            Download File\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={this.handleOpenUploadFileModal}\n                            className=\"button button--uploadFile\"\n                        >\n                            <FontAwesomeIcon icon={faCloudUploadAlt}/>\n                            Upload File\n                        </button>\n                    </li>\n                    <li>\n                        <button\n                            onClick={this.handleOpenAddUserModal}\n                            className=\"button button--addUser\"\n                        >\n                            <FontAwesomeIcon icon={faUserPlus}/>\n                            Add User\n                        </button>\n                    </li>\n                    <li>\n                        <UserMenu/>\n                    </li>\n                </ul>\n                <UploadFileModal ref={this.uploadFileModalRef}/>\n                <AddUserModal ref={this.addUserModalRef}/>\n            </header>\n        );\n    }\n};\n\nlet SecondaryHeaderWithRoute = withRouter(SecondaryHeader);\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <SecondaryHeaderWithRoute\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { matchPath } from 'react-router'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faLessThan, faGreaterThan } from '@fortawesome/free-solid-svg-icons';\n\nimport { AppConsumer } from '../components/Context';\n\n\nclass NoteView extends Component {\n\n    state = {\n        currentIndex: 0\n    }\n\n    componentDidMount () {\n        this.handleMoveToItem();\n    }\n\n    componentDidUpdate () {\n        this.handleMoveToItem();\n    }\n\n    handleMoveToItem = () => {\n        let match = matchPath(this.props.history.location.pathname, {\n            path: '/notes/:note/:folder/:page/',\n            exact: true,\n            strict: false\n        });\n\n        let currPath = `${match.params.note}/${match.params.folder}/${match.params.page}`;\n\n        let currentIndex = this.props.appContext.pages.items.findIndex((item, index) => {\n            return item.path === currPath;\n        })\n\n        this.setState(prevState => {\n            if (prevState.currentIndex === currentIndex) {\n                return null;\n            }\n\n            return {\n                currentIndex: currentIndex\n            }\n        })\n    }\n\n    handlePrev = () => {\n        let path = this.props.appContext.pages.items[this.state.currentIndex - 1].path;\n        this.props.history.push('/notes/' + path);\n    }\n\n    handleNext = () => {\n        let path = this.props.appContext.pages.items[this.state.currentIndex + 1].path;\n        this.props.history.push('/notes/' + path);\n    }\n\n    render() {\n\n        let image = '';\n        let name = '';\n        try {\n            name = this.props.appContext.pages.items[this.state.currentIndex].name;\n            image = this.props.appContext.pages.items[this.state.currentIndex].imageURL;\n        } catch(Error) {}\n\n\n        return (\n            <section className=\"noteView\">\n                <img src={image}/>\n                <section className=\"navigation\">\n                    <section className=\"navigation--btnWrapper\">\n                        { this.state.currentIndex === 0 ? ''\n                            : <button onClick={this.handlePrev}>&lt; Back</button>\n                        }\n                    </section>\n                    <section className=\"navigation--textWrapper\">\n                        <span>{name}</span>\n                    </section>\n                    <section className=\"navigation--btnWrapper\">\n                        { this.state.currentIndex == this.props.appContext.pages.items.length - 1 ? ''\n                            : <button onClick={this.handleNext}>Next &gt;</button>\n                        }\n                    </section>\n                </section>\n                <section className=\"navigationMobile\">\n                    <button onClick={this.handlePrev} disabled={this.state.currentIndex === 0} className=\"navigationMobile--btn\">\n                        <FontAwesomeIcon icon={faLessThan}/>\n                    </button>\n                    <button onClick={this.handleNext} disabled={this.state.currentIndex === this.props.appContext.pages.items.length - 1} className=\"navigationMobile--btn\">\n                        <FontAwesomeIcon icon={faGreaterThan}/>\n                    </button>\n                </section>\n            </section>\n        );\n    }\n}\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <NoteView\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n\n","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport SecondaryHeader from '../components/SecondaryHeader';\nimport NoteView from '../components/NoteView';\n\nclass NoteViewScreen extends Component {\n\n    render() {\n        return (\n            <section\n            className=\"screen screen--view\"\n            >\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section>\n                        <NoteView {...this.props}/>\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default withRouter(NoteViewScreen);\n","import React, { Component } from 'react';\n\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFolderOpen } from '@fortawesome/free-solid-svg-icons';\n\nclass NoteFolderObject extends Component {\n\n    render() {\n        return (\n            <NavLink to={`/notes/${this.props.path}`} className=\"noteFolder\">\n                <section className=\"icon\">\n                    <FontAwesomeIcon icon={faFolderOpen}/>\n                </section>\n                <section>\n                    <span>{this.props.name}</span>\n                </section>\n            </NavLink>\n        );\n    }\n};\n\nexport default withRouter(NoteFolderObject);","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { AppConsumer } from '../components/Context';\nimport NoteFolderObject from '../components/NoteFolderObject';\nimport NoteImageObject from '../components/NoteImageObject';\nimport SecondaryHeader from '../components/SecondaryHeader';\n\nclass DirectoryScreen extends Component {\n\n    render() {\n        let noteSlug = this.props.match.params.note;\n        let folderSlug = this.props.match.params.folder;\n\n        let isNote = folderSlug ? false : true;\n\n        let folders = this.props.appContext.folders.items;\n        let pages = this.props.appContext.pages.items;\n\n        return (\n            <section className=\"screen\">\n                <SecondaryHeader/>\n                <main className=\"main\">\n                    <section className=\"items\">\n                        {isNote ? folders.map((props) => {\n                            return <NoteFolderObject key={props.pk} note={noteSlug} {...props}/>\n                        }) :\n\n                        pages.map((props) => {\n                            return <NoteImageObject key={props.pk} {...props}/>\n                        })}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nlet DirectoryScreenWithRoute = withRouter(DirectoryScreen);\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <DirectoryScreenWithRoute\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport { AppConsumer } from '../components/Context';\nimport NoteImageObject from '../components/NoteImageObject';\n\nclass HomeScreen extends Component {\n\n    render() {\n        let recentItems = this.props.appContext.recentItems;\n\n        return (\n            <section className=\"screen screen--home\">\n                <main className=\"main\">\n                    <h3>Recently Added Notes</h3>\n                    <section className=\"items\">\n                        {recentItems.map(({pk, ...props}) =>\n                            <NoteImageObject key={pk} {...props}/>\n                        )}\n                    </section>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default React.forwardRef((props, ref) => (\n    <AppConsumer>\n        { appContext =>\n            <HomeScreen\n                {...props}\n                appContext={appContext}\n                ref={ref}\n            />\n        }\n    </AppConsumer>\n));\n\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass LoginScreen extends Component {\n    handleSubmit = () => {\n        this.props.history.push('/home');\n    }\n\n    render() {\n        return (\n            <section className=\"screen screen--loginSignup\">\n                <form\n                    className=\"form--loginSignup\"\n                    onSubmit={this.handleSubmit}\n                >\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <button className=\"button button--primary\" type=\"submit\">Login</button>\n                    <NavLink to=\"/signup\" className=\"button button--secondary\">Sign up</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default LoginScreen;\n","import React, { Component } from 'react';\n\nimport {\n    NavLink\n  } from 'react-router-dom';\n\n\nclass SignUpScreen extends Component {\n    render() {\n        return (\n            <section\n            className=\"screen screen--loginSignup\"\n            >\n                <form className=\"form--loginSignup\">\n                    <h3>Note Sharing Application</h3>\n                    <input type=\"text\" placeholder=\"Name\"/>\n                    <input type=\"email\" placeholder=\"Email\"/>\n                    <input type=\"password\" placeholder=\"Password\"/>\n                    <input type=\"password\" placeholder=\"Password Confirm\"/>\n                    <button className=\"button button--primary\" type=\"submit\">Login</button>\n                    <NavLink exact to=\"/login\" className=\"button button--secondary\">Back</NavLink>\n                </form>\n            </section>\n        );\n    }\n}\n\nexport default SignUpScreen;\n","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBolt } from '@fortawesome/free-solid-svg-icons';\n\nimport SecondaryHeader from '../components/SecondaryHeader';\n\n\nclass NotFoundScreen extends Component {\n\n    render() {\n        return(\n            <section className=\"screen screen--notFound\">\n                <SecondaryHeader isNotFoundScreen={true}/>\n                <main className=\"main\">\n                    <FontAwesomeIcon className=\"screenIcon\" icon={faBolt}/>\n                    <h2 className=\"title\">Page is Not Found</h2>\n                </main>\n            </section>\n        );\n    }\n}\n\nexport default withRouter(NotFoundScreen);\n","import React, { Component } from 'react';\n\nimport { withRouter } from 'react-router-dom';\n\n\nclass LogOutScreen extends Component {\n\n    render() {\n        return (\n            <section className=\"screen screen--logout\">\n            </section>\n        );\n    }\n}\n\nexport default withRouter(LogOutScreen);\n","import React, {Component} from 'react';\n\nimport {\n  BrowserRouter,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport { AppProvider } from './components/Context';\n\nimport NoteViewHeader from './components/NoteViewHeader';\nimport PrimaryHeader from './components/PrimaryHeader';\nimport PrimaryHeaderMobile from './components/PrimaryHeaderMobile';\nimport PrivateRoute from './components/PrivateRoute';\n\nimport NoteViewScreen from './screens/NoteViewScreen';\nimport DirectoryScreen from './screens/DirectoryScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport SignUpScreen from './screens/SignUpScreen';\nimport NotFoundScreen from './screens/NotFoundScreen';\nimport LogOutScreen from './screens/LogOutScreen';\nimport './App.scss';\n\nimport AddUserModal from './modals/AddUserModal';\n\nclass App extends Component {\n\n    state = {\n        user: {\n            name: null,\n            email: null,\n            authToken: null\n        },\n        recentItems: [\n            {\n                pk: 1,\n                name: 'Page 1',\n                path: 'physics/lecture1/page1',\n                imageURL: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 2,\n                name: 'Page 2',\n                path: 'physics/lecture1/page2',\n                imageURL: 'https://via.placeholder.com/200'\n            },\n            {\n                pk: 3,\n                name: 'Page 3',\n                path: 'physics/lecture1/page3',\n                imageURL: 'https://via.placeholder.com/200'\n            }\n        ],\n        notes: {\n            slug: null,\n            imported: false,\n            items: []\n        },\n        folders: {\n            info: {\n                slug: 'physics',\n                name: 'Physics',\n                path: 'physics/'\n            },\n            items: [\n                {\n                    pk: 1,\n                    path: 'physics/lecture1',\n                    name: 'Lecture 1'\n                },\n                {\n                    pk: 2,\n                    path: 'physics/lecture2',\n                    name: 'Lecture 2'\n                },\n                {\n                    pk: 3,\n                    path: 'physics/lecture3',\n                    name: 'Lecture 3'\n                }\n            ]\n        },\n        pages: {\n            info: {\n                slug: 'lecture1',\n                name: 'Lecture 1',\n                path: 'physics/lecture1/'\n            },\n            currentIndex: null,\n            items: [\n                {\n                    pk: 1,\n                    name: 'Page 1',\n                    path: 'physics/lecture1/page1',\n                    imageURL: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 2,\n                    name: 'Page 2',\n                    path: 'physics/lecture1/page2',\n                    imageURL: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 3,\n                    name: 'Page 3',\n                    path: 'physics/lecture1/page3',\n                    imageURL: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 4,\n                    name: 'Page 4',\n                    path: 'physics/lecture1/page4',\n                    imageURL: 'https://via.placeholder.com/200'\n                },\n                {\n                    pk: 5,\n                    name: 'Page 5',\n                    path: 'physics/lecture1/page5',\n                    imageURL: 'https://via.placeholder.com/200'\n                }\n            ]\n        }\n    }\n\n    render() {\n        return (\n            <AppProvider value={{...this.state}}>\n                <BrowserRouter basename={\"note-sharing-app\"}>\n                    <div className=\"App\">\n                        <NoteViewHeader/>\n                        <PrimaryHeaderMobile/>\n                        <PrimaryHeader/>\n                        <Switch>\n                            <Route path=\"/login\" component={LoginScreen}/>\n                            <Route path=\"/signup\" component={SignUpScreen}/>\n                            <PrivateRoute path=\"/home\" component={HomeScreen}/>\n                            <PrivateRoute path=\"/logout\" component={LogOutScreen}/>\n                            <PrivateRoute path=\"/notes/:note/:folder/:page\" component={NoteViewScreen}/>\n                            <PrivateRoute path=\"/notes/:note/:folder\" component={DirectoryScreen}/>\n                            <PrivateRoute path=\"/notes/:note\" component={DirectoryScreen}/>\n                            <Route component={NotFoundScreen}/>\n                        </Switch>\n                        <AddUserModal></AddUserModal>\n                    </div>\n                </BrowserRouter>\n            </AppProvider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}